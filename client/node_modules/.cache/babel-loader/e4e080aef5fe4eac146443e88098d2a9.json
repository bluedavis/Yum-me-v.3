{"ast":null,"code":"import auth0 from \"auth0-js\";\nexport default class Auth {\n  constructor(history) {\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.handleAuthentication = () => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          this.history.push(\"/\");\n        } else if (err) {\n          this.history.push(\"/\");\n          alert(\"Error: \".concat(err.error, \". Check the console for further details\"));\n          console.log(err);\n        }\n      });\n    };\n\n    this.setSession = authResult => {\n      //set time for access token to expire\n      const expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem(\"acces_token\", authResult.accessToken);\n      localStorage.setItem(\"id_token\", authResult.idToken);\n      localStorage.setItem(\"expires_at\", expiresAt);\n    };\n\n    this.logout = () => {\n      localStorage.removeItem(\"acces_token\");\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n      this.userProfile = null;\n      this.auth0.logout({\n        clientID: 'dHwcO0ax4906YUFFnF01S5JqlH4WW3y8',\n        returnTo: \"http://localhost:3000\"\n      });\n    };\n\n    this.getAccessToken = () => {\n      const accesToken = localStorage.getItem(\"acces_token\");\n\n      if (!accesToken) {\n        throw new Error(\"No access token found\");\n      }\n\n      return accesToken;\n    };\n\n    this.getProfile = cb => {\n      if (this.userProfile) return cb(this.userProfile);\n      this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n        if (profile) this.userProfile = profile;\n        cb(profile, err);\n      });\n    };\n\n    this.history = history;\n    this.userProfile = null;\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-hv4uhi4y.eu.auth0.com',\n      clientID: 'dHwcO0ax4906YUFFnF01S5JqlH4WW3y8',\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n}","map":{"version":3,"sources":["/Users/hannalauth/Desktop/CODE/Repositories/REACTAPP/Yum-me-v.3/client/src/Auth/Auth.js"],"names":["auth0","Auth","constructor","history","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","push","alert","error","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","userProfile","clientID","returnTo","getAccessToken","accesToken","getItem","Error","getProfile","cb","client","userInfo","profile","WebAuth","domain","redirectUri","process","env","REACT_APP_AUTH0_CALLBACK_URL","responseType","scope","isAuthenticated","parse"],"mappings":"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","sourcesContent":["import auth0 from \"auth0-js\";\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    this.userProfile = null;\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-hv4uhi4y.eu.auth0.com',\n      clientID: 'dHwcO0ax4906YUFFnF01S5JqlH4WW3y8',\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  //1. get data from url, parse it and write it to session\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        this.history.push(\"/\");\n      } else if (err) {\n        this.history.push(\"/\");\n        alert(`Error: ${err.error}. Check the console for further details`);\n        console.log(err);\n      }\n    });\n  };\n\n  setSession = authResult => {\n    //set time for access token to expire\n    const expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n\n    localStorage.setItem(\"acces_token\", authResult.accessToken);\n    localStorage.setItem(\"id_token\", authResult.idToken);\n    localStorage.setItem(\"expires_at\", expiresAt);\n  };\n\n  isAuthenticated() {\n    const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout = () => {\n    localStorage.removeItem(\"acces_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    this.userProfile = null;\n    this.auth0.logout({\n      clientID: 'dHwcO0ax4906YUFFnF01S5JqlH4WW3y8',\n      returnTo: \"http://localhost:3000\"\n    });\n  };\n\n  getAccessToken = () => {\n    const accesToken = localStorage.getItem(\"acces_token\");\n    if (!accesToken) {\n      throw new Error(\"No access token found\");\n    }\n    return accesToken;\n  };\n\n  getProfile = cb => {\n    if (this.userProfile) return cb(this.userProfile);\n    this.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n      if (profile) this.userProfile = profile;\n      cb(profile, err);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}